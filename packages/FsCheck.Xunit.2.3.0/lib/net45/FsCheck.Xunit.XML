<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>FsCheck.Xunit</name></assembly>
<members>
<member name="T:FsCheck.Xunit.PropertyDiscoverer">
<summary>
 xUnit2 test case discoverer to link the method with the PropertyAttribute to the PropertyTestCase
 so the test can be run via FsCheck.
</summary>
</member>
<member name="T:FsCheck.Xunit.PropertyTestCase">
<summary>
 The xUnit2 test runner for the PropertyAttribute that executes the test via FsCheck
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Verbose(System.Boolean)">
<summary>
Output all generated arguments.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.StartSize(System.Int32)">
<summary>
The size to use for the first test.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Replay(System.String)">
<summary>
If set, the seed to use to start testing. Allows reproduction of previous runs. You can just paste
the tuple from the output window, e.g. 12344,12312 or (123,123).
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.QuietOnSuccess(System.Boolean)">
<summary>
If set, suppresses the output from the test if the test is successful. This can be useful when running tests
with TestDriven.net, because TestDriven.net pops up the Output window in Visual Studio if a test fails; thus,
when conditioned to that behaviour, it&apos;s always a bit jarring to receive output from passing tests.
The default is false, which means that FsCheck will also output test results on success, but if set to true,
FsCheck will suppress output in the case of a passing test. This setting doesn&apos;t affect the behaviour in case of
test failures.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.MaxTest(System.Int32)">
<summary>
The maximum number of tests that are run.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.MaxFail(System.Int32)">
<summary>
The maximum number of tests where values are rejected, e.g. as the result of ==&gt;
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.EndSize(System.Int32)">
<summary>
The size to use for the last test, when all the tests are passing. The size increases linearly between Start- and EndSize.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Arbitrary(System.Type[])">
<summary>
The Arbitrary instances to use for this test method. The Arbitrary instances
are merged in back to front order i.e. instances for the same generated type
at the front of the array will override those at the back.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Verbose">
<summary>
Output all generated arguments.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.StartSize">
<summary>
The size to use for the first test.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Replay">
<summary>
If set, the seed to use to start testing. Allows reproduction of previous runs. You can just paste
the tuple from the output window, e.g. 12344,12312 or (123,123).
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.QuietOnSuccess">
<summary>
If set, suppresses the output from the test if the test is successful. This can be useful when running tests
with TestDriven.net, because TestDriven.net pops up the Output window in Visual Studio if a test fails; thus,
when conditioned to that behaviour, it&apos;s always a bit jarring to receive output from passing tests.
The default is false, which means that FsCheck will also output test results on success, but if set to true,
FsCheck will suppress output in the case of a passing test. This setting doesn&apos;t affect the behaviour in case of
test failures.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.MaxTest">
<summary>
The maximum number of tests that are run.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.MaxFail">
<summary>
The maximum number of tests where values are rejected, e.g. as the result of ==&gt;
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.EndSize">
<summary>
The size to use for the last test, when all the tests are passing. The size increases linearly between Start- and EndSize.
</summary>
</member>
<member name="P:FsCheck.Xunit.PropertyAttribute.Arbitrary">
<summary>
The Arbitrary instances to use for this test method. The Arbitrary instances
are merged in back to front order i.e. instances for the same generated type
at the front of the array will override those at the back.
</summary>
</member>
<member name="T:FsCheck.Xunit.PropertyAttribute">
<summary>
Run this method as an FsCheck test.
</summary>
</member>
<member name="T:FsCheck.Xunit.ArbitraryAttribute">
<summary>
Override Arbitrary instances for FsCheck tests within the attributed class
or module.
</summary>
</member>
</members>
</doc>
